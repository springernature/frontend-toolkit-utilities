/**
 * Enhanced
 * Bootstrap the rest of the styles on cut the mustard
 */
/**
 * Breakpoints
 * Shared media query values
 */
/**
 * Colors
 * Maps for color values & greyscale settings
 *
 */
/**
 * Spacing
 * Shared spacing values
 */
/**
 * Style
 * Cosmetic styling settings
 *
 */
/**
 * Typography
 * Font settings
 */
/**
 * Return a greyscale color based on $greyscale-base
 *
 * @param {Integer} $val - lightness value between $greyscale-min and $greyscale-max
 * @param {Float} $opacity - opacity value between 0.1 and 1, to one decimal place
 *
 */
/**
 * Return a color from a color palette
 *
 * @param {String} $name - name of the color to insert
 * @param {Arglist} $keys - 0 to 2 paramaters defining map and opacity
 *
 */
/**
 * Returns either a dark or light foreground color when given the background color
 *
 * @param {Integer|String} $bgcolor - number for grays, string for colors
 * @param {Map} $map - the color map to use
 *
 */
/**
 * Calculates the sRGB luma of a colour
 * @private
 *
 * @param {*} $c - Color value
 *
 * https://lnikki.la/articles/sass-better-colour-based-on-brightness/
 * http://robots.thoughtbot.com/closer-look-color-lightness
 *
 */
/**
 * Map deep get
 * @author Hugo Giraudel
 * @private
 *
 * @param {Map} $map - Map
 * @param {Arglist} $keys - Key chain
 * @return {*} - Desired value
 *
 */
/**
 * Spacing
 * Get a spacing value from a map
 */
/**
 * Global
 * Main brand settings
 */
/**
 * Breakpoints
 * Media query helper
 * @group 30-mixins
 */
/**
 * Nature
 * Custom nature utility mixins
 */
/**
 * Forms
 * Default form styles
 */
fieldset {
  border: 0; }

input:focus,
button:focus,
select:focus {
  outline: 3px solid #fece3e; }

button:active {
  outline: 0; }

input + label {
  padding-left: 0.5em; }

/*
 * Layout
 * Universal layout styles
 */
html {
  height: 100%;
  overflow-y: scroll;
  font-size: 62.5%; }

body {
  min-height: 100%;
  font-family: Source Sans Pro, arial, helvetica, sans-serif;
  line-height: 1.76;
  color: #222222;
  background: #eeeeee;
  font-size: 1.7em;
  /* fixes chrome rems bug - http://stackoverflow.com/questions/20099844/chrome-not-respecting-rem-font-size-on-body-tag */
  letter-spacing: 0.01em; }

figure {
  margin: 0; }

body,
div,
dl,
dt,
dd,
pre,
code,
form,
fieldset,
legend,
input,
button,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0; }

h1,
h2,
h3,
h4,
h5,
h6,
small {
  margin: 0;
  padding: 0; }

abbr[title] {
  text-decoration: none; }

/**
 * Links
 * Basic link styles
 */
a {
  text-decoration: none;
  vertical-align: baseline;
  color: #006699; }

a:hover {
  text-decoration: underline;
  -webkit-text-decoration-skip: skip;
  text-decoration-skip: ink; }

a:focus {
  outline: 3px solid #fece3e; }

a:active,
a:hover {
  outline: 0; }

/**
 * Lists
 * Default list styles
 */
nav ul,
nav ol {
  list-style: none;
  list-style-image: none; }

/**
 * Tables
 * Default table styles
 */
table {
  width: 100%;
  margin-bottom: 0;
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 1.6rem;
  font-family: Source Sans Pro, arial, helvetica, sans-serif; }

th,
td {
  padding: 4px 7px;
  border-right: 1px solid #d5d5d5;
  text-align: left;
  line-height: 1.15; }

th {
  vertical-align: top; }

td {
  vertical-align: middle; }

th[valign='top'] {
  vertical-align: top; }

th[valign='middle'] {
  vertical-align: middle; }

thead tr {
  border-bottom: 1px solid #d5d5d5; }

tbody tr {
  border-top: 1px solid #d5d5d5; }

tbody tr:first-child {
  border-top: 0; }

th {
  background: #eeeeee; }

tfoot tr {
  border-top: 2px solid #d5d5d5; }

tfoot td {
  font-weight: bold; }

/**
 * Typographic
 * Standard text and heading formatting
 */
/*
 * Default spacing
 * default margin 28px to match line height
 * this is used for mainting vertical rhythm on the page
 */
p,
ul,
ol {
  margin-top: 0;
  margin-bottom: 28px; }

/*
 * Headings
 * classes used to maintain the semantically appropriate heading levels
 * NOT for use on non-headings
 * if additional headings are needed they should be created via
 * additional classes, never via location dependant styling
 */
h5 {
  font-size: 1.2rem; }

h1,
h2,
h3,
h5 {
  font-family: "Lora", Palatino, Times, "Times New Roman", serif;
  font-weight: normal; }

p:empty {
  display: none; }

.c-autocomplete {
  margin: 10px auto 0;
  width: 380px;
  height: 50px;
  font-size: 20px;
  border: 1px solid #eee;
  padding: 5px 10px 5px 0;
  text-indent: 15px; }
  .c-autocomplete:placeholder {
    color: #ccc; }
  .c-autocomplete::-webkit-input-placeholder {
    color: #ccc; }
  .c-autocomplete::-moz-placeholder {
    color: #ccc; }

.c-suggestion-container {
  margin: auto;
  width: 390px;
  border: 1px solid #eee;
  position: relative;
  line-height: 30px;
  border-top: none;
  max-height: 300px;
  overflow-y: scroll;
  background: #fff;
  overflow-x: hidden; }
  .c-suggestion-container__suggestion {
    width: 100%;
    padding: 15px 0 5% 15px;
    text-align: left;
    cursor: pointer; }
    .c-suggestion-container__suggestion:hover, .c-suggestion-container__suggestion:focus, .c-suggestion-container__suggestion:active {
      background: #e7eff4; }
